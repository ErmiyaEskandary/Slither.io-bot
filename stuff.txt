px = currentSnake.xx + currentSnake.fx;
py = currentSnake.yy + currentSnake.fy;
lpx = px;
lpy = py;
px = currentSnakeParts.xx;
py = currentSnakeParts.yy;
lax = ax;
lay = ay;
ax = (px + lpx) / 2;
ay = (py + lpy) / 2;
snakeWidth = 29 *currentSnake.sc

context.save();
context.beginPath();
context.moveTo(window.mww2 + (px - window.view_xx) * window.gsc, window.mhh2 + (py - window.view_yy) * window.gsc);

context.quadraticCurveTo(window.mww2 + (lpx - window.view_xx) * window.gsc, window.mhh2 + (lpy - window.view_yy) * window.gsc, window.mww2 + (ax - window.view_xx) * window.gsc, window.mhh2 + (ay - window.view_yy) * window.gsc) 
context.lineTo(window.mww2 + (ax - window.view_xx) * window.gsc, window.mhh2 + (ay - window.view_yy) * window.gsc);

context.save();
context.lineJoin = "round";
context.lineCap = "round";

window.drawSnake = function (){
	var context = window.mc.getContext("2d");
	for (snakeIndex = window.snakes.length - 1; 0 <= snakeIndex; snakeIndex--) {
		
	if (currentSnake = window.snakes[snakeIndex], currentSnake.iiv) {
		px = currentSnake.xx + currentSnake.fx;
		py = currentSnake.yy + currentSnake.fy;
		//E = currentSnake.ehang;
		var t = currentSnake.sc,
			snakeWidth = 29 * t,
			D = currentSnake.cfl;
		currentSnakeParts = currentSnake.pts[currentSnake.pts.length - 1];
		if (1 == render_mode) {
			context.save();
			context.beginPath();
			context.moveTo(window.mww2 + (px - window.view_xx) * window.gsc, window.mhh2 + (py - window.view_yy) * window.gsc);
			z = !1;
			for (var y = currentSnake.pts.length - 1; 0 <= y; y--) {
				currentSnakeParts = currentSnake.pts[y];
				lpx = px;
				lpy = py;
				px = currentSnakeParts.xx;
				py = currentSnakeParts.yy;
				var B = currentSnakeParts.fx,
					q = currentSnakeParts.fy;
	
				0 < D && (px += B, py += q,
				lax = ax,
				lay = ay,
				ax = (px + lpx) / 2,
				ay = (py + lpy) / 2,
				z || (lax = ax, lay = ay), 
				1 > D && (u = 1 - D,
				lpx += (lax - lpx) * u,
				lpy += (lay - lpy) * u,
				ax += (lax - ax) * u,
				ay += (lay - ay) * u), 
				z 
				? 
				D-- 
				: 
				D -= currentSnake.chl + currentSnake.fchl, 
				z 
				? 
				context.quadraticCurveTo(window.mww2 + (lpx - window.view_xx) * window.gsc, window.mhh2 + (lpy - window.view_yy) * window.gsc, window.mww2 + (ax - window.view_xx) * window.gsc, window.mhh2 + (ay - view_yy) * window.gsc) 
				: 
				(context.lineTo(window.mww2 + (ax - window.view_xx) * window.gsc, window.mhh2 + (ay - window.view_yy) * window.gsc), z = !0));
			}
			context.save();
			context.lineJoin = "round";
			context.lineCap = "round";
			is_firefox 
			? 
			(currentSnake.sp > currentSnake.fsp && (y = currentSnake.alive_amt * (1 - currentSnake.dead_amt) * Math.max(0, Math.min(1, (currentSnake.sp - currentSnake.ssp) / (currentSnake.msp - currentSnake.ssp))), context.save(), context.strokeStyle = currentSnake.cs, context.globalAlpha = .3 * y, context.lineWidth = (snakeWidth + 6) * window.gsc, context.stroke(), context.lineWidth = (snakeWidth + 9) * window.gsc, context.stroke(), context.lineWidth = (snakeWidth + 12) * window.gsc, context.stroke(), context.restore()), context.globalAlpha = 1 * currentSnake.alive_amt * (1 - currentSnake.dead_amt), context.strokeStyle = "#000000", context.lineWidth = (snakeWidth + 5) * window.gsc) 
			: 
		   (currentSnake.sp > currentSnake.fsp && (y = currentSnake.alive_amt * (1 - currentSnake.dead_amt) * Math.max(0, Math.min(1, (currentSnake.sp - currentSnake.ssp) / (currentSnake.msp - currentSnake.ssp))), context.save(), context.lineWidth = (snakeWidth - 2) * window.gsc, context.shadowBlur = 30 * window.gsc, context.shadowColor = "rgba(" + currentSnake.rr + "," + currentSnake.gg + "," + currentSnake.bb + ", " + Math.round(1E4 * y) / 1E4 + ")", context.stroke(), context.stroke(), context.restore()), context.globalAlpha = .4 * currentSnake.alive_amt * (1 - currentSnake.dead_amt), context.strokeStyle = "#000000", context.lineWidth = (snakeWidth + 5) * window.gsc, context.stroke(), context.strokeStyle = currentSnake.cs, context.lineWidth = snakeWidth * window.gsc, context.strokeStyle = "#000000", context.globalAlpha = 1 * currentSnake.alive_amt * (1 - currentSnake.dead_amt));
		   
			context.stroke();
			context.strokeStyle = currentSnake.cs;
			context.globalAlpha = .8 * currentSnake.alive_amt * (1 - currentSnake.dead_amt);
			context.lineWidth = snakeWidth * window.gsc;
			context.stroke();
			context.restore();
			context.strokeStyle = currentSnake.cs;
			
			currentSnake.dead && (q = (.5 + .5 * Math.abs(Math.sin(5 * Math.PI * currentSnake.dead_amt))) * Math.sin(Math.PI * currentSnake.dead_amt), context.save(), context.lineJoin = "round", context.lineCap = "round", context.globalCompositeOperation = "lighter", context.lineWidth = (snakeWidth - 3) * window.gsc, context.globalAlpha = q, context.strokeStyle = "#FFCC99", context.stroke(), context.restore());
			context.restore()
		}
		}
	}
};